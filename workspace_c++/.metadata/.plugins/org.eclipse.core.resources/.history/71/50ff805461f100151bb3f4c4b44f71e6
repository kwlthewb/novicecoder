/*
 * Management.cpp
 *
 *  Created on: Mar 23, 2016
 *      Author: bill
 */

#include "Management.h"

void function_1() {
	std::cout << "Beauty is yada yada yada...\n";
}

class Functor {
public:
	void operator()(std::string& msg) {
		for(int i = 0; i > -10; i--)
			std::cout << "from t2 " << i << " " << msg << std::endl;
		msg = "sdlfjladjs";
	}
};


int main() {
	std::thread t1(function_1);
	std::string s = "blah blah";
	std::thread t2((Functor()),std::ref(s)); // parameter to a thread is always pass by value

	std::cout << s << std::endl;
	t2.join();
//	try {
//		for(int i = 0; i < 10; i++)
//			std::cout << "from main: " << i << std::endl;
//		throw 1299;
//	} catch(int e) {
//		std::cout << "Thrown execption " << e << std::endl;
//		t1.join();
//		//throw;
//	}

	t1.join();
	return 0;
}
