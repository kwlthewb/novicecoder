/*
 * ExceptTest.cpp
 *
 *  Created on: Mar 7, 2016
 *      Author: bill
 */

#include "ExceptTest.h"
#include "Incls.h"
#include "cat.h"
#include "dog.h"

ExceptTest::ExceptTest() {
	// TODO Auto-generated constructor stub

}

ExceptTest::~ExceptTest() {
	// TODO Auto-generated destructor stub
}

//class dog {
//	std::string m_name;
//public:
//	dog(std::string name) { m_name = name; std::cout << name << " is born." << std::endl; }
//	~dog() { std::cout << m_name << " is destroyed." << std::endl; }
//	void bark() { std::cout << m_name << " bark bark bark..." << std::endl; }
//	void prepareToDestr() {
//		std::cout << m_name << " prepareToDestr called." << std::endl;
//		throw 20;
//	}
//};

cat c("Smokey");

dog::dog(char* name) {
	_count++;
	_name = name;
	std::cout << _name << " dog is born." << std::endl;
	c.meow();
}
void dog::bark() {
	std::cout << "Dog name is " << _name << std::endl;
}

int dog::getCount() {
	return _count;
}

dog d("Gunner");

int main() {
//	try {
//		dog dog1("Henry");
//		dog dog2("Bob");
//		//throw 20;
//		dog1.bark();
//		dog2.bark();
//		dog1.prepareToDestr();
//		dog2.prepareToDestr();
//	} catch(int e) {
//		std::cout << e << " is caught" << std::endl;
//	}
	d.bark();
	std::cout << "Dog count: " << d.getCount() << std::endl;
	return 0;
}
