/*
 * Casting.cpp
 *
 *  Created on: Mar 8, 2016
 *      Author: bill
 */

#include "Casting.h"

namespace Casting {

Casting::Casting() {
	// TODO Auto-generated constructor stub

}

Casting::~Casting() {
	// TODO Auto-generated destructor stub
}

} /* namespace Casting */

int main() {
	// 1. implicit type conversion
	// 2. explicit type conversion - casting

	// static_cast
//	int i = 9;
//	float f = static_cast<float>(i);
//	VirtConst::Dog d1 = static_cast<VirtConst::Dog>(std::string("Bob"));
//	VirtConst::Dog* pd = static_cast<VirtConst::Dog*>(new VirtConst::Yellowdog()); // down/up cast
//	delete pd;

	// dynamic_cast
	// only work on pointers and references
	// need the 2 types to be polymorphic(have virtual function)
	VirtConst::Dog* pd = new VirtConst::Yellowdog();
	VirtConst::Yellowdog* py = dynamic_cast<VirtConst::Yellowdog*>(pd);
	delete pd;
	//delete py;

	// const_cast
	// only works on pointer and references
	// only works on same type
	// cast away constness
	const char* str = "Hello world";
	std::cout << str << std::endl;
	str = "new";
	std::cout << str << std::endl;
	char* modifiable = const_cast<char*>(str);

	// reinterpret_cast


}
