/*
 * Semaphores.cpp
 *
 *  Created on: Mar 14, 2016
 *      Author: bill
 */

#include "Semaphores.h"

void *myfunc1(void *ptr) {
	char *msg = (char *) ptr;
	int count = 0;
	while(count < 100) {
		printf("%d %s sleeping...\n",count,msg);
		sleepcp(2000);
		count++;
	}
}

void *myfunc2(void *ptr) {
	char *msg = (char *) ptr;
	int count = 0;
	while(count < 100) {
		printf("%d %s sleeping...\n",count,msg);
		sleepcp(2000);
		count++;
	}
	pthread_exit(0);
}

void func1() {
	int count = 0;
	while(count < 20) {
		std::cout << "Beauty is only skin-deep.\n";
		sleepcp(2000);
		count++;
	}
}

int main() {
	setvbuf (stdout, NULL, _IONBF, BUFSIZ);
//	pthread_t t1,t2;
//	char *msg1 = "Thread 1";
//	char *msg2 = "Thread 2";
//	pthread_create(&t1, NULL, myfunc1,(void *)msg1);
//	pthread_create(&t2, NULL, myfunc2,(void *)msg2);
//
//	pthread_join(t1,NULL);
//	pthread_join(t2,NULL);
	std::thread t1(func1);
	//t1.detach(); // break thread from main thread, let it run on its own as daemon proces

	t1.join();

	return 0;
}
